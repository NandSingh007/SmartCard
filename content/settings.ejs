<div class="grid w-full grid-cols-1 px-4 pt-6 dark:bg-gray-900">
    <div class="col-span-1">
      <div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg shadow-sm dark:border-gray-700 sm:p-6 dark:bg-gray-800">
        <h3 class="mb-4 text-xl font-semibold dark:text-white">User Login</h3>
        <form id="userForm">
          <div class="grid grid-cols-6 gap-6">
            <!-- Username Field -->
            <div class="col-span-6 sm:col-span-3">
              <label for="username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Username</label>
              <input 
                type="text" 
                name="username" 
                id="username" 
                class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" 
                placeholder="Enter username" 
                required
              />
            </div>
            <!-- Password Field -->
            <div class="col-span-6 sm:col-span-3">
              <label for="password" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Password</label>
              <input 
                type="password" 
                name="password" 
                id="password" 
                class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" 
                placeholder="Enter password" 
                required
              />
            </div>
            <!-- Submit Button -->
            <div class="col-span-6">
              <button 
                class="text-white bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800" 
                type="submit"
              >
                Submit
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/js-cookie@3.0.5/dist/js.cookie.min.js"></script>
<script>
  // Select the form
  const form = document.getElementById("userForm");

  // Add submit event listener
  form.addEventListener("submit", async (e) => {
    e.preventDefault(); // Prevent the default form submission

    // Collect form data
    const username = document.getElementById("username").value;
    const password = document.getElementById("password").value;

    // API endpoint (replace with your backend URL)
    const apiUrl = "https://smartpaycard.in/loginBackend";

    try {
      // Send data to the backend
      const response = await fetch(apiUrl, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ username, password }),
      });

      // Handle the response
      const result = await response.json();
      if (response.ok) {
        // Success response
        alert("Login successful: " + result.message);

        // Save token in cookies for 3 hours
        const token = result.token; // Assuming the API response includes a `token`
        const expiryDate = new Date(new Date().getTime() + 3 * 60 * 60 * 1000); // 3 hours from now
        Cookies.set("authToken", token, { expires: expiryDate });

        // Redirect or perform other actions
        window.location.href = "/dashboard"; // Replace with your desired route
      } else {
        // Error response
        alert("Error: " + result.message || "Something went wrong");
      }
    } catch (error) {
      // Handle network errors
      alert("Network error: " + error.message);
    }
  });
</script>
